# Generated by Django 3.0.6 on 2020-07-19 09:17

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('threads', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=35)),
                ('category', models.CharField(max_length=30)),
                ('sub_category', models.CharField(max_length=30)),
                ('brief', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='complain/')),
                ('reg_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_edit_at', models.DateTimeField(blank=True, null=True)),
                ('sorted', models.BooleanField(default=False)),
                ('sorted_at', models.DateTimeField(blank=True, null=True)),
                ('solving_date', models.DateField(blank=True, null=True)),
                ('action_by_sorter', models.CharField(default='', max_length=10)),
                ('sorter_action_msg', models.TextField(blank=True, null=True)),
                ('sorter_actioned_at', models.DateTimeField(blank=True, null=True)),
                ('threaded_at', models.DateTimeField(blank=True, null=True)),
                ('pinned_in_thread', models.BooleanField(default=False)),
                ('pinned_at', models.DateTimeField(blank=True, null=True)),
                ('complainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Student')),
                ('pinned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complain_pinned_by_member+', to='user.Member')),
                ('redressal', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='threads.Redressal')),
                ('solver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solving_member+', to='user.Member')),
                ('sorted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sorted_by_member+', to='user.Member')),
                ('sorter_actioned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_taken_by+', to='user.Member')),
                ('thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='threads.Thread')),
                ('threaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='note/')),
                ('reg_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('pinned', models.BooleanField(default=False)),
                ('pinned_at', models.DateTimeField(blank=True, null=True)),
                ('complain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='complain.Complain')),
                ('pinned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='by_member in thread/complain+', to='user.Member')),
                ('solver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Member')),
                ('thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='threads.Thread')),
            ],
        ),
    ]
